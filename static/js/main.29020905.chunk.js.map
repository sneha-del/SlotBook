{"version":3,"sources":["logo.svg","components/Homepage.js","components/Input.js","components/subInput.js","components/Setup.js","App.js","reportWebVitals.js","index.js"],"names":["Homepage","history","useHistory","className","style","textAlign","id","marginLeft","onClick","push","Input","this","props","dateDetails","starting","ending","startTime","endTime","renderHeading","idx","arr","showSlots","date","month","day","slice","type","value","onChange","e","currentTarget","React","Component","SubInput","map","Setup","state","src1","dest1","totalHrs","total","x","count","arrObj","idxPressed","countPressed","mainArr","String","setState","q","parseInt","rem","console","log","q2","rem2","alert","addInTotal","first","second","displayHrs","today","Date","days","monthNames","i","dateObj","getDate","getDay","getMonth","setDate","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29020905.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nconst Homepage = () => {\r\n  const history = useHistory();\r\n  const moveto = () => {\r\n    history.push(\"/slot\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"home\">\r\n        <h1 style={{ textAlign: \"center\" }}>\r\n          <span className=\"logo\">YourPhysio</span> allows you to add your weekly\r\n          working hours and displays them.{\" \"}\r\n        </h1>\r\n        <button id=\"foot\" style={{ marginLeft: \"46%\" }}>\r\n          <button className=\"button-os\" onClick={moveto}>\r\n            Add your Weekly slots\r\n          </button>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport { BiAddToQueue } from \"react-icons/bi\";\r\nclass Input extends React.Component {\r\n  render() {\r\n    const {\r\n      dateDetails,\r\n      starting,\r\n      ending,\r\n      startTime,\r\n      endTime,\r\n      renderHeading,\r\n      idx,\r\n      arr,\r\n      showSlots,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"elements\">\r\n        <span className=\"dayName\">\r\n          {`${dateDetails[idx].date} ${dateDetails[idx].month}, ${dateDetails[\r\n            idx\r\n          ].day.slice(0, 3)}`}\r\n        </span>\r\n        <input\r\n          type=\"time\"\r\n          value={starting[idx]}\r\n          onChange={(e) => startTime(e.currentTarget.value, idx)}\r\n        ></input>\r\n        <span> to </span>\r\n        <input\r\n          type=\"time\"\r\n          value={ending[idx]}\r\n          onChange={(e) => endTime(e.currentTarget.value, idx)}\r\n        ></input>\r\n        <button className=\"add\" onClick={() => renderHeading(idx)}>\r\n          <BiAddToQueue className=\"btn\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nclass SubInput extends React.Component {\r\n  render() {\r\n    const { arr } = this.props;\r\n    return (\r\n      <div className=\"center\">\r\n        {arr.map((e) => (\r\n          <div>\r\n            <input type=\"time\"></input>\r\n            <span> to </span>\r\n            <input type=\"time\"></input>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubInput;\r\n","import React from \"react\";\r\nimport Input from \"./Input\";\r\nimport SubInput from \"./subInput\";\r\nclass Setup extends React.Component {\r\n  state = {\r\n    src1: [\"00:00\", \"00:00\", \"00:00\", \"00:00\", \"00:00\", \"00:00\", \"00:00\"],\r\n    dest1: [\"00:00\", \"00:00\", \"00:00\", \"00:00\", \"00:00\", \"00:00\", \"00:00\"],\r\n    totalHrs: [0, 0, 0, 0, 0, 0, 0],\r\n    total: 0,\r\n    x: false,\r\n    starting: [\"00:00\", \"00:00\", \"00:00\", \"00:00\", \"00:00\", \"00:00\", \"00:00\"],\r\n    ending: [\"00:00\", \"00:00\", \"00:00\", \"00:00\", \"00:00\", \"00:00\", \"00:00\"],\r\n    count: 0,\r\n    arrObj: [[], [], [], [], [], [], []],\r\n    idxPressed: 0,\r\n    countPressed: [0, 0, 0, 0, 0, 0, 0],\r\n    mainArr: [0, 1, 2, 3, 4, 5, 6],\r\n  };\r\n\r\n  startTime = (e, idx) => {\r\n    let starting = this.state.starting;\r\n\r\n    starting[idx] = String(e);\r\n    // localStorage.setItem(\"starting\",starting);\r\n    let src1 = [...this.state.src1];\r\n    src1[idx] = e;\r\n    let x = false;\r\n    this.setState({ src1, x, starting });\r\n  };\r\n  endTime = (e, idx) => {\r\n    let ending = this.state.ending;\r\n    ending[idx] = e;\r\n    // localStorage.setItem(\"ending\",ending);\r\n\r\n    let q = parseInt(e.slice(0, 2));\r\n    let rem = parseInt(e.slice(3, 5));\r\n    console.log(rem);\r\n    let dest1 = [...this.state.dest1];\r\n    let src1 = this.state.src1;\r\n    let q2 = parseInt(src1[idx].slice(0, 2));\r\n    let rem2 = parseInt(src1[idx].slice(3, 5));\r\n    if (q2 > q) {\r\n      alert(\"Ending time should be greater than \" + src1[idx]);\r\n    }\r\n    if (q2 == q) {\r\n      if (rem < rem2) {\r\n        alert(\"Ending time should be greater than \" + src1[idx]);\r\n        // return;\r\n      }\r\n    }\r\n    dest1[idx] = e;\r\n    let x = false;\r\n    this.setState({ dest1, x, ending });\r\n  };\r\n  addInTotal = (idx) => {\r\n    let first = parseInt(this.state.src1[idx].slice(0, 2));\r\n    let second = parseInt(this.state.dest1[idx].slice(0, 2));\r\n    console.log(first + \" \" + second);\r\n    let totalHrs = this.state.totalHrs;\r\n    let total = this.state.total;\r\n    if (first >= second) {\r\n      total = total - totalHrs[idx];\r\n      totalHrs[idx] = 0;\r\n      this.setState({ total, totalHrs });\r\n      alert(\"Ending time should be greater than \" + first + \":00\");\r\n      return;\r\n    }\r\n    total -= totalHrs[idx];\r\n    totalHrs[idx] = second - first;\r\n    total += second - first;\r\n    this.setState({ totalHrs, total });\r\n  };\r\n\r\n  renderHeading = (idx) => {\r\n    let idxPressed = idx;\r\n    let countPressed = this.state.countPressed;\r\n    let count = countPressed[idx];\r\n    count++;\r\n    countPressed[idx] = count;\r\n    let arrObj = this.state.arrObj;\r\n    let arr = arrObj[idx];\r\n    arr.push(count);\r\n    arrObj[idx] = arr;\r\n    this.setState({ arrObj, count, idxPressed, countPressed });\r\n  };\r\n  showSlots = (idx) => {\r\n    let idxPressed = idx;\r\n    let arrObj = this.state.arrObj;\r\n    let arr = arrObj[idx];\r\n    this.setState({ arrObj, idxPressed });\r\n  };\r\n  displayHrs = () => {\r\n    let x = true;\r\n    this.setState({ x });\r\n  };\r\n\r\n  render() {\r\n    let today = new Date();\r\n    var days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n    const monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let dateDetails = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      let dateObj = {\r\n        date: today.getDate(),\r\n        day: days[today.getDay()],\r\n        month: monthNames[today.getMonth()],\r\n      };\r\n      dateDetails.push(dateObj);\r\n      today.setDate(today.getDate() + 1);\r\n    }\r\n    const idxPressed = this.state.idxPressed;\r\n    var mainArr = this.state.mainArr;\r\n    return (\r\n      <>\r\n        <div className=\"flex\">\r\n          <div className=\"start\">Start time</div>\r\n          <div className=\"end\">End time</div>\r\n        </div>\r\n\r\n        <div className=\"main\">\r\n          <div className=\"inner\">\r\n            {mainArr.map((e) => (\r\n              <>\r\n                <div className=\"individual\">\r\n                  <Input\r\n                    idx={e}\r\n                    dateDetails={dateDetails}\r\n                    starting={this.state.starting}\r\n                    ending={this.state.ending}\r\n                    startTime={this.startTime}\r\n                    endTime={this.endTime}\r\n                    renderHeading={this.renderHeading}\r\n                    arr={this.state.arr}\r\n                    showSlots={this.showSlots}\r\n                  />\r\n                  <button\r\n                    className=\"saveBtn\"\r\n                    onClick={() => this.addInTotal(e)}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n                {idxPressed == e ? (\r\n                  <SubInput arr={this.state.arrObj[e]} />\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </>\r\n            ))}\r\n            <div className=\"cover\">\r\n              <button className=\"submitBtn\" onClick={this.displayHrs}>\r\n                DISPLAY\r\n              </button>\r\n            </div>\r\n            {this.state.x && (\r\n              <h1 className=\"totalHrs\">\r\n                Total Working Hours are : {this.state.total}\r\n              </h1>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Setup;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Homepage from \"./components/Homepage\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Setup from \"./components/Setup\";\n\nconst App = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" component={Homepage} exact />\n          <Route path=\"/slot\" component={Setup} exact />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}